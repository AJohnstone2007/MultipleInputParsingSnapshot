(* Parser grammar *)

!element
 `\t,
 `\n,
 `\r,
 ` ,
 `!,
 `\",
 `#,
 `$,
 `%,
 `&,
 `',
 `(,
 `),
 `*,
 `+,
 `,,
 `-,
 `.,
 `/,
 `0,
 `1,
 `2,
 `3,
 `4,
 `5,
 `6,
 `7,
 `8,
 `9,
 `:,
 `;,
 `<,
 `=,
 `>,
 `?,
 `@,
 `A,
 `B,
 `C,
 `D,
 `E,
 `F,
 `G,
 `H,
 `I,
 `J,
 `K,
 `L,
 `M,
 `N,
 `O,
 `P,
 `Q,
 `R,
 `S,
 `T,
 `U,
 `V,
 `W,
 `X,
 `Y,
 `Z,
 `[,
 `\\,
 `],
 `^,
 `_,
 ``,
 `a,
 `b,
 `c,
 `d,
 `e,
 `f,
 `g,
 `h,
 `i,
 `j,
 `k,
 `l,
 `m,
 `n,
 `o,
 `p,
 `q,
 `r,
 `s,
 `t,
 `u,
 `v,
 `w,
 `x,
 `y,
 `z,
 `{,
 `|,
 `},
 `~,
 ART_CSP__SHREIK,
 ART_CSP__SHREIK_EQUAL,
 ART_CSP__PERCENT,
 ART_CSP__PERCENT_EQUAL,
 ART_CSP__AMPERSAND,
 ART_CSP__AMPERSAND_AMPERSAND,
 ART_CSP__AMPERSAND_EQUAL,
 ART_CSP__LPAR,
 ART_CSP__RPAR,
 ART_CSP__STAR,
 ART_CSP__STAR_EQUAL,
 ART_CSP__PLUS,
 ART_CSP__PLUS_PLUS,
 ART_CSP__PLUS_EQUAL,
 ART_CSP__COMMA,
 ART_CSP__MINUS,
 ART_CSP__MINUS_MINUS,
 ART_CSP__MINUS_EQUAL,
 ART_CSP__MINUS_GT,
 ART_CSP__PERIOD,
 ART_CSP__PERIOD_PERIOD_PERIOD,
 ART_CSP__SLASH,
 ART_CSP__SLASH_EQUAL,
 ART_CSP__COLON,
 ART_CSP__COLON_COLON,
 ART_CSP__SEMICOLON,
 ART_CSP__LT,
 ART_CSP__LT_LT,
 ART_CSP__LT_LT_EQUAL,
 ART_CSP__LT_EQUAL,
 ART_CSP__LT_GT,
 ART_CSP__EQUAL,
 ART_CSP__EQUAL_EQUAL,
 ART_CSP__GT,
 ART_CSP__GT_EQUAL,
 ART_CSP__GT_GT,
 ART_CSP__GT_GT_EQUAL,
 ART_CSP__GT_GT_GT,
 ART_CSP__GT_GT_GT_EQUAL,
 ART_CSP__QUERY,
 ART_CSP__AT,
 ART_CSP_VariableAccess,
 ART_CSP__LBRACK,
 ART_CSP__RBRACK,
 ART_CSP__UPARROW,
 ART_CSP__UPARROW_EQUAL,
 ART_CSP_abstract,
 ART_CSP_assert,
 ART_CSP_boolean,
 ART_CSP_break,
 ART_CSP_byte,
 ART_CSP_case,
 ART_CSP_catch,
 ART_CSP_char,
 ART_CSP_class,
 ART_CSP_const,
 ART_CSP_continue,
 ART_CSP_default,
 ART_CSP_do,
 ART_CSP_double,
 ART_CSP_else,
 ART_CSP_enum,
 ART_CSP_exports,
 ART_CSP_extends,
 ART_CSP_final,
 ART_CSP_finally,
 ART_CSP_float,
 ART_CSP_for,
 ART_CSP_goto,
 ART_CSP_if,
 ART_CSP_implements,
 ART_CSP_import,
 ART_CSP_instanceof,
 ART_CSP_int,
 ART_CSP_interface,
 ART_CSP_long,
 ART_CSP_module,
 ART_CSP_native,
 ART_CSP_new,
 ART_CSP_non_MINUSsealed,
 ART_CSP_open,
 ART_CSP_opens,
 ART_CSP_package,
 ART_CSP_permits,
 ART_CSP_private,
 ART_CSP_protected,
 ART_CSP_provides,
 ART_CSP_public,
 ART_CSP_record,
 ART_CSP_requires,
 ART_CSP_return,
 ART_CSP_sealed,
 ART_CSP_short,
 ART_CSP_static,
 ART_CSP_strictfp,
 ART_CSP_super,
 ART_CSP_switch,
 ART_CSP_synchronized,
 ART_CSP_this,
 ART_CSP_throw,
 ART_CSP_throws,
 ART_CSP_to,
 ART_CSP_transient,
 ART_CSP_transitive,
 ART_CSP_try,
 ART_CSP_uses,
 ART_CSP_var,
 ART_CSP_void,
 ART_CSP_volatile,
 ART_CSP_while,
 ART_CSP_with,
 ART_CSP_yield,
 ART_CSP__LBRACE,
 ART_CSP__BAR,
 ART_CSP__BAR_EQUAL,
 ART_CSP__BAR_BAR,
 ART_CSP__RBRACE,
 ART_CSP__TILDE,
 AdditionalBound,
 AdditionalBoundStar,
 AdditiveExpression,
 AmbiguousName,
 AndExpression,
 Annotation,
 AnnotationInterfaceBody,
 AnnotationInterfaceDeclaration,
 AnnotationInterfaceElementDeclaration,
 AnnotationInterfaceElementModifier,
 AnnotationInterfaceElementModifierStar,
 AnnotationInterfaceMemberDeclaration,
 AnnotationInterfaceMemberDeclarationStar,
 AnnotationStar,
 AnnotationStarBracketStar,
 ArgumentList,
 ArgumentListOpt,
 ArrayAccess,
 ArrayCreationExpression,
 ArrayCreationExpressionWithInitializer,
 ArrayCreationExpressionWithoutInitializer,
 ArrayInitializer,
 ArrayType,
 AssertStatement,
 Assignment,
 AssignmentExpression,
 AssignmentOperator,
 BarClassTypeStar,
 BasicForStatement,
 BasicForStatementNoShortIf,
 BinaryDigit,
 BinaryDigitOrUnderscore,
 BinaryDigits,
 BinaryDigitsAndUnderscores,
 BinaryExponent,
 BinaryExponentIndicator,
 BinaryIntegerLiteral,
 BinaryNumeral,
 Block,
 BlockStatement,
 BlockStatementStar,
 BlockStatements,
 BlockStatementsOpt,
 BooleanLiteral,
 BracketsStar,
 BreakStatement,
 CaseConstant,
 CastExpression,
 CatchClause,
 CatchClauseStar,
 CatchFormalParameter,
 CatchType,
 Catches,
 CatchesOpt,
 CharacterLiteral,
 ClassBody,
 ClassBodyDeclaration,
 ClassBodyDeclarationStar,
 ClassBodyOpt,
 ClassDeclaration,
 ClassExtends,
 ClassExtendsOpt,
 ClassImplements,
 ClassImplementsOpt,
 ClassInstanceCreationExpression,
 ClassLiteral,
 ClassMemberDeclaration,
 ClassModifier,
 ClassModifierStar,
 ClassOrInterfaceType,
 ClassOrInterfaceTypeToInstantiate,
 ClassPermits,
 ClassPermitsOpt,
 ClassType,
 CommaCaseConstantStar,
 CommaElementValuePairStar,
 CommaElementValueStar,
 CommaEnumConstantStar,
 CommaExceptionTypeStar,
 CommaExpressionStar,
 CommaFormalParameterStar,
 CommaIdentifierStar,
 CommaInterfaceTypeStar,
 CommaLambdaParameterStar,
 CommaModuleNameOpt,
 CommaOpt,
 CommaRecordComponentStar,
 CommaStatementExpressionStar,
 CommaTypeArgumentStar,
 CommaTypeNameStar,
 CommaTypeParameterStar,
 CommaVariableDeclaratorStar,
 CommaVariableInitializerStar,
 CompactConstructorDeclaration,
 CompilationUnit,
 ConditionalAndExpression,
 ConditionalExpression,
 ConditionalOrExpression,
 ConstantDeclaration,
 ConstantModifier,
 ConstantModifierStar,
 ConstructorBody,
 ConstructorDeclaration,
 ConstructorDeclarator,
 ConstructorModifier,
 ConstructorModifierStar,
 ContinueStatement,
 DecimalFloatingPointLiteral,
 DecimalIntegerLiteral,
 DecimalNumeral,
 DefaultValue,
 DefaultValueOpt,
 Digit,
 DigitOrUnderscore,
 Digits,
 DigitsAndUnderscores,
 DimExpr,
 DimExprStar,
 DimExprs,
 Dims,
 DimsOpt,
 DoStatement,
 DotAnnotationStarIdentifierStar,
 DotIdentifierStar,
 DummyRuleEAS,
 ElementValue,
 ElementValueArrayInitializer,
 ElementValueList,
 ElementValueListOpt,
 ElementValuePair,
 ElementValuePairList,
 ElementValuePairListOpt,
 EmptyStatement,
 EnhancedForStatement,
 EnhancedForStatementNoShortIf,
 EnumBody,
 EnumBodyDeclarations,
 EnumBodyDeclarationsOpt,
 EnumConstant,
 EnumConstantList,
 EnumConstantListOpt,
 EnumConstantModifier,
 EnumConstantModifierStar,
 EnumDeclaration,
 EqualVariableInitializerOpt,
 EqualityExpression,
 EscapeSequence,
 ExceptionType,
 ExceptionTypeList,
 ExclusiveOrExpression,
 ExplicitConstructorInvocation,
 ExplicitConstructorInvocationOpt,
 ExponentIndicator,
 ExponentPart,
 Expression,
 ExpressionName,
 ExpressionOpt,
 ExpressionStatement,
 FieldAccess,
 FieldDeclaration,
 FieldModifier,
 FieldModifierStar,
 Finally,
 FinallyOpt,
 FloatTypeSuffix,
 FloatingPointLiteral,
 FloatingPointType,
 ForInit,
 ForInitOpt,
 ForStatement,
 ForStatementNoShortIf,
 ForUpdate,
 ForUpdateOpt,
 FormalParameter,
 FormalParameterList,
 FormalParameterListOpt,
 HexDigit,
 HexDigitOrUnderscore,
 HexDigits,
 HexDigitsAndUnderscores,
 HexIntegerLiteral,
 HexNumeral,
 HexSignificand,
 HexadecimalFloatingPointLiteral,
 Identifier,
 IdentifierChars,
 IdentifierDotOpt,
 IdentifierOpt,
 IfThenElseStatement,
 IfThenElseStatementNoShortIf,
 IfThenStatement,
 ImportDeclaration,
 ImportDeclarationStar,
 InclusiveOrExpression,
 InstanceInitializer,
 InstanceofExpression,
 IntegerLiteral,
 IntegerTypeSuffix,
 IntegralType,
 InterfaceBody,
 InterfaceDeclaration,
 InterfaceExtends,
 InterfaceExtendsOpt,
 InterfaceMemberDeclaration,
 InterfaceMemberDeclarationStar,
 InterfaceMethodDeclaration,
 InterfaceMethodModifier,
 InterfaceMethodModifierStar,
 InterfaceModifier,
 InterfaceModifierStar,
 InterfacePermits,
 InterfacePermitsOpt,
 InterfaceType,
 InterfaceTypeList,
 JavaLetterNoUS,
 JavaLetterOrDigit,
 LabeledStatement,
 LabeledStatementNoShortIf,
 LambdaBody,
 LambdaExpression,
 LambdaParameter,
 LambdaParameterList,
 LambdaParameterListOpt,
 LambdaParameterType,
 LambdaParameters,
 LeftHandSide,
 LineTerminator,
 Literal,
 LocalClassOrInterfaceDeclaration,
 LocalVariableDeclaration,
 LocalVariableDeclarationStatement,
 LocalVariableType,
 MarkerAnnotation,
 MethodBody,
 MethodDeclaration,
 MethodDeclarator,
 MethodHeader,
 MethodInvocation,
 MethodModifier,
 MethodModifierStar,
 MethodName,
 MethodReference,
 ModularCompilationUnit,
 ModuleDeclaration,
 ModuleDirective,
 ModuleDirectiveStar,
 ModuleName,
 MultiplicativeExpression,
 NonZeroDigit,
 NormalAnnotation,
 NormalClassDeclaration,
 NormalInterfaceDeclaration,
 NullLiteral,
 NumericType,
 OctalDigit,
 OctalDigitOrUnderscore,
 OctalDigits,
 OctalDigitsAndUnderscores,
 OctalEscape,
 OctalIntegerLiteral,
 OctalNumeral,
 OrdinaryCompilationUnit,
 PackageDeclaration,
 PackageDeclarationOpt,
 PackageModifier,
 PackageModifierStar,
 PackageName,
 PackageOrTypeName,
 ParanArgumentListOptStar,
 Pattern,
 PostDecrementExpression,
 PostIncrementExpression,
 PostfixExpression,
 PreDecrementExpression,
 PreIncrementExpression,
 Primary,
 PrimaryNoNewArray,
 PrimitiveType,
 ReceiverParameter,
 ReceiverParameterCommaOpt,
 RecordBody,
 RecordBodyDeclaration,
 RecordBodyDeclarationStar,
 RecordComponent,
 RecordComponentList,
 RecordComponentListOpt,
 RecordComponentModifier,
 RecordComponentModifierStar,
 RecordDeclaration,
 RecordHeader,
 ReferenceType,
 RelationalExpression,
 RequiresModifier,
 RequiresModifierStar,
 Resource,
 ResourceList,
 ResourceSpecification,
 Result,
 ReturnStatement,
 SemicolonOpt,
 SemicolonResourceStar,
 ShiftExpression,
 Sign,
 SignedInteger,
 SimpleTypeName,
 SingleCharacter,
 SingleElementAnnotation,
 SingleStaticImportDeclaration,
 SingleTypeImportDeclaration,
 Statement,
 StatementExpression,
 StatementExpressionList,
 StatementNoShortIf,
 StatementWithoutTrailingSubstatement,
 StaticImportOnDemandDeclaration,
 StaticInitializer,
 StringCharacter,
 StringLiteral,
 SwitchBlock,
 SwitchBlockStatementGroup,
 SwitchBlockStatementGroupStar,
 SwitchExpression,
 SwitchLabel,
 SwitchLabelColonStar,
 SwitchRule,
 SwitchRuleStar,
 SwitchStatement,
 SynchronizedStatement,
 TextBlock,
 TextBlockCharacter,
 TextBlockWhiteSpace,
 ThrowStatement,
 Throws,
 ThrowsOpt,
 ToModuleNameCommaModuleNameOptStar,
 TopLevelClassOrInterfaceDeclaration,
 TopLevelClassOrInterfaceDeclarationStar,
 TryStatement,
 TryWithResourcesStatement,
 TypeArgument,
 TypeArgumentList,
 TypeArguments,
 TypeArgumentsOpt,
 TypeArgumentsOrDiamond,
 TypeArgumentsOrDiamondOpt,
 TypeBound,
 TypeBoundOpt,
 TypeIdentifier,
 TypeImportOnDemandDeclaration,
 TypeName,
 TypeParameter,
 TypeParameterList,
 TypeParameterModifier,
 TypeParameterModifierStar,
 TypeParameters,
 TypeParametersOpt,
 TypePattern,
 TypeVariable,
 UnannArrayType,
 UnannClassOrInterfaceType,
 UnannClassType,
 UnannInterfaceType,
 UnannPrimitiveType,
 UnannReferenceType,
 UnannType,
 UnannTypeVariable,
 UnaryExpression,
 UnaryExpressionNotPlusMinus,
 Underscores,
 UnicodeEscape,
 UnicodeMarker,
 UnqualifiedClassInstanceCreationExpression,
 UnqualifiedMethodIdentifier,
 VariableArityParameter,
 VariableArityRecordComponent,
 VariableDeclarator,
 VariableDeclaratorId,
 VariableDeclaratorList,
 VariableInitializer,
 VariableInitializerList,
 VariableInitializerListOpt,
 VariableModifier,
 VariableModifierStar,
 WhileStatement,
 WhileStatementNoShortIf,
 WhiteSpace,
 Wildcard,
 WildcardBounds,
 WildcardBoundsOpt,
 YieldStatement,
 ZeroToThree,
 openOpt,
 ARTLexerStart

!paraterminal
 ART_CSP__SHREIK = "!",
 ART_CSP__SHREIK_EQUAL = "!=",
 ART_CSP__PERCENT = "%",
 ART_CSP__PERCENT_EQUAL = "%=",
 ART_CSP__AMPERSAND = "&",
 ART_CSP__AMPERSAND_AMPERSAND = "&&",
 ART_CSP__AMPERSAND_EQUAL = "&=",
 ART_CSP__LPAR = "(",
 ART_CSP__RPAR = ")",
 ART_CSP__STAR = "*",
 ART_CSP__STAR_EQUAL = "*=",
 ART_CSP__PLUS = "+",
 ART_CSP__PLUS_PLUS = "++",
 ART_CSP__PLUS_EQUAL = "+=",
 ART_CSP__COMMA = ",",
 ART_CSP__MINUS = "-",
 ART_CSP__MINUS_MINUS = "--",
 ART_CSP__MINUS_EQUAL = "-=",
 ART_CSP__MINUS_GT = "->",
 ART_CSP__PERIOD = ".",
 ART_CSP__PERIOD_PERIOD_PERIOD = "...",
 ART_CSP__SLASH = "/",
 ART_CSP__SLASH_EQUAL = "/=",
 ART_CSP__COLON = ":",
 ART_CSP__COLON_COLON = "::",
 ART_CSP__SEMICOLON = ";",
 ART_CSP__LT = "<",
 ART_CSP__LT_LT = "<<",
 ART_CSP__LT_LT_EQUAL = "<<=",
 ART_CSP__LT_EQUAL = "<=",
 ART_CSP__LT_GT = "<>",
 ART_CSP__EQUAL = "=",
 ART_CSP__EQUAL_EQUAL = "==",
 ART_CSP__GT = ">",
 ART_CSP__GT_EQUAL = ">=",
 ART_CSP__GT_GT = ">>",
 ART_CSP__GT_GT_EQUAL = ">>=",
 ART_CSP__GT_GT_GT = ">>>",
 ART_CSP__GT_GT_GT_EQUAL = ">>>=",
 ART_CSP__QUERY = "?",
 ART_CSP__AT = "@",
 ART_CSP_VariableAccess = "VariableAccess",
 ART_CSP__LBRACK = "[",
 ART_CSP__RBRACK = "]",
 ART_CSP__UPARROW = "^",
 ART_CSP__UPARROW_EQUAL = "^=",
 ART_CSP_abstract = "abstract",
 ART_CSP_assert = "assert",
 ART_CSP_boolean = "boolean",
 ART_CSP_break = "break",
 ART_CSP_byte = "byte",
 ART_CSP_case = "case",
 ART_CSP_catch = "catch",
 ART_CSP_char = "char",
 ART_CSP_class = "class",
 ART_CSP_const = "const",
 ART_CSP_continue = "continue",
 ART_CSP_default = "default",
 ART_CSP_do = "do",
 ART_CSP_double = "double",
 ART_CSP_else = "else",
 ART_CSP_enum = "enum",
 ART_CSP_exports = "exports",
 ART_CSP_extends = "extends",
 ART_CSP_final = "final",
 ART_CSP_finally = "finally",
 ART_CSP_float = "float",
 ART_CSP_for = "for",
 ART_CSP_goto = "goto",
 ART_CSP_if = "if",
 ART_CSP_implements = "implements",
 ART_CSP_import = "import",
 ART_CSP_instanceof = "instanceof",
 ART_CSP_int = "int",
 ART_CSP_interface = "interface",
 ART_CSP_long = "long",
 ART_CSP_module = "module",
 ART_CSP_native = "native",
 ART_CSP_new = "new",
 ART_CSP_non_MINUSsealed = "non-sealed",
 ART_CSP_open = "open",
 ART_CSP_opens = "opens",
 ART_CSP_package = "package",
 ART_CSP_permits = "permits",
 ART_CSP_private = "private",
 ART_CSP_protected = "protected",
 ART_CSP_provides = "provides",
 ART_CSP_public = "public",
 ART_CSP_record = "record",
 ART_CSP_requires = "requires",
 ART_CSP_return = "return",
 ART_CSP_sealed = "sealed",
 ART_CSP_short = "short",
 ART_CSP_static = "static",
 ART_CSP_strictfp = "strictfp",
 ART_CSP_super = "super",
 ART_CSP_switch = "switch",
 ART_CSP_synchronized = "synchronized",
 ART_CSP_this = "this",
 ART_CSP_throw = "throw",
 ART_CSP_throws = "throws",
 ART_CSP_to = "to",
 ART_CSP_transient = "transient",
 ART_CSP_transitive = "transitive",
 ART_CSP_try = "try",
 ART_CSP_uses = "uses",
 ART_CSP_var = "var",
 ART_CSP_void = "void",
 ART_CSP_volatile = "volatile",
 ART_CSP_while = "while",
 ART_CSP_with = "with",
 ART_CSP_yield = "yield",
 ART_CSP__LBRACE = "{",
 ART_CSP__BAR = "|",
 ART_CSP__BAR_EQUAL = "|=",
 ART_CSP__BAR_BAR = "||",
 ART_CSP__RBRACE = "}",
 ART_CSP__TILDE = "~",
 BooleanLiteral,
 CharacterLiteral,
 FloatingPointLiteral,
 Identifier,
 IntegerLiteral,
 NullLiteral,
 StringLiteral,
 TextBlock,
 TypeIdentifier,
 UnqualifiedMethodIdentifier
!start CompilationUnit

AdditionalBound ::= ART_CSP__AMPERSAND  InterfaceType  

AdditionalBoundStar ::= AdditionalBound AdditionalBoundStar  
    |  #  

AdditiveExpression ::= MultiplicativeExpression  
    |  AdditiveExpression ART_CSP__PLUS  MultiplicativeExpression  
    |  AdditiveExpression ART_CSP__MINUS  MultiplicativeExpression  

AmbiguousName ::= Identifier   
    |  AmbiguousName ART_CSP__PERIOD  Identifier   

AndExpression ::= EqualityExpression  
    |  AndExpression ART_CSP__AMPERSAND  EqualityExpression  

Annotation ::= NormalAnnotation  
    |  MarkerAnnotation  
    |  SingleElementAnnotation  

AnnotationInterfaceBody ::= ART_CSP__LBRACE  AnnotationInterfaceMemberDeclarationStar ART_CSP__RBRACE   

AnnotationInterfaceDeclaration ::= InterfaceModifierStar ART_CSP__AT  ART_CSP_interface  TypeIdentifier  AnnotationInterfaceBody  

AnnotationInterfaceElementDeclaration ::= AnnotationInterfaceElementModifierStar UnannType Identifier  ART_CSP__LPAR  ART_CSP__RPAR  DimsOpt DefaultValueOpt ART_CSP__SEMICOLON   

AnnotationInterfaceElementModifier ::= Annotation  
    |  ART_CSP_public   
    |  ART_CSP_abstract   

AnnotationInterfaceElementModifierStar ::= AnnotationInterfaceElementModifier AnnotationInterfaceElementModifierStar  
    |  #  

AnnotationInterfaceMemberDeclaration ::= AnnotationInterfaceElementDeclaration  
    |  ConstantDeclaration  
    |  ClassDeclaration  
    |  InterfaceDeclaration  
    |  ART_CSP__SEMICOLON   

AnnotationInterfaceMemberDeclarationStar ::= AnnotationInterfaceMemberDeclaration AnnotationInterfaceMemberDeclarationStar  
    |  #  

AnnotationStar ::= Annotation AnnotationStar  
    |  #  

AnnotationStarBracketStar ::= AnnotationStar ART_CSP__LBRACK  ART_CSP__RBRACK  AnnotationStarBracketStar  
    |  #  

ArgumentList ::= Expression CommaExpressionStar  

ArgumentListOpt ::= ArgumentList  
    |  #  

ArrayAccess ::= ExpressionName ART_CSP__LBRACK  Expression ART_CSP__RBRACK   
    |  PrimaryNoNewArray ART_CSP__LBRACK  Expression ART_CSP__RBRACK   
    |  ArrayCreationExpressionWithInitializer ART_CSP__LBRACK  Expression ART_CSP__RBRACK   

ArrayCreationExpression ::= ArrayCreationExpressionWithoutInitializer  
    |  ArrayCreationExpressionWithInitializer  

ArrayCreationExpressionWithInitializer ::= ART_CSP_new  PrimitiveType Dims ArrayInitializer  
    |  ART_CSP_new  ClassOrInterfaceType Dims ArrayInitializer  

ArrayCreationExpressionWithoutInitializer ::= ART_CSP_new  PrimitiveType DimExprs DimsOpt  
    |  ART_CSP_new  ClassOrInterfaceType DimExprs DimsOpt  

ArrayInitializer ::= ART_CSP__LBRACE  VariableInitializerListOpt CommaOpt ART_CSP__RBRACE   

ArrayType ::= PrimitiveType Dims  
    |  ClassOrInterfaceType Dims  
    |  TypeVariable Dims  

AssertStatement ::= ART_CSP_assert  Expression ART_CSP__SEMICOLON   
    |  ART_CSP_assert  Expression ART_CSP__COLON  Expression ART_CSP__SEMICOLON   

Assignment ::= LeftHandSide AssignmentOperator Expression  

AssignmentExpression ::= ConditionalExpression  
    |  Assignment  

AssignmentOperator ::= ART_CSP__EQUAL   
    |  ART_CSP__STAR_EQUAL   
    |  ART_CSP__SLASH_EQUAL   
    |  ART_CSP__PERCENT_EQUAL   
    |  ART_CSP__PLUS_EQUAL   
    |  ART_CSP__MINUS_EQUAL   
    |  ART_CSP__LT_LT_EQUAL   
    |  ART_CSP__GT_GT_EQUAL   
    |  ART_CSP__GT_GT_GT_EQUAL   
    |  ART_CSP__AMPERSAND_EQUAL   
    |  ART_CSP__UPARROW_EQUAL   
    |  ART_CSP__BAR_EQUAL   

BarClassTypeStar ::= ART_CSP__BAR  ClassType BarClassTypeStar  
    |  #  

BasicForStatement ::= ART_CSP_for  ART_CSP__LPAR  ForInitOpt ART_CSP__SEMICOLON  ExpressionOpt ART_CSP__SEMICOLON  ForUpdateOpt ART_CSP__RPAR  Statement  

BasicForStatementNoShortIf ::= ART_CSP_for  ART_CSP__LPAR  ForInitOpt ART_CSP__SEMICOLON  ExpressionOpt ART_CSP__SEMICOLON  ForUpdateOpt ART_CSP__RPAR  StatementNoShortIf  

Block ::= ART_CSP__LBRACE  BlockStatementsOpt ART_CSP__RBRACE   

BlockStatement ::= LocalClassOrInterfaceDeclaration  
    |  LocalVariableDeclarationStatement  
    |  Statement  

BlockStatementStar ::= BlockStatement BlockStatementStar  
    |  #  

BlockStatements ::= BlockStatement BlockStatementStar  

BlockStatementsOpt ::= BlockStatements  
    |  #  

BracketsStar ::= ART_CSP__LBRACK  ART_CSP__RBRACK  BracketsStar  
    |  #  

BreakStatement ::= ART_CSP_break  IdentifierOpt ART_CSP__SEMICOLON   

CaseConstant ::= ConditionalExpression  

CastExpression ::= ART_CSP__LPAR  PrimitiveType ART_CSP__RPAR  UnaryExpression  
    |  ART_CSP__LPAR  ReferenceType AdditionalBoundStar ART_CSP__RPAR  UnaryExpressionNotPlusMinus  
    |  ART_CSP__LPAR  ReferenceType AdditionalBoundStar ART_CSP__RPAR  LambdaExpression  

CatchClause ::= ART_CSP_catch  ART_CSP__LPAR  CatchFormalParameter ART_CSP__RPAR  Block  

CatchClauseStar ::= CatchClause CatchClauseStar  
    |  #  

CatchFormalParameter ::= VariableModifierStar CatchType VariableDeclaratorId  

CatchType ::= UnannClassType BarClassTypeStar  

Catches ::= CatchClause CatchClauseStar  

CatchesOpt ::= Catches  
    |  #  

ClassBody ::= ART_CSP__LBRACE  ClassBodyDeclarationStar ART_CSP__RBRACE   

ClassBodyDeclaration ::= ClassMemberDeclaration  
    |  InstanceInitializer  
    |  StaticInitializer  
    |  ConstructorDeclaration  

ClassBodyDeclarationStar ::= ClassBodyDeclaration ClassBodyDeclarationStar  
    |  #  

ClassBodyOpt ::= ClassBody  
    |  #  

ClassDeclaration ::= NormalClassDeclaration  
    |  EnumDeclaration  
    |  RecordDeclaration  

ClassExtends ::= ART_CSP_extends  ClassType  

ClassExtendsOpt ::= ClassExtends  
    |  #  

ClassImplements ::= ART_CSP_implements  InterfaceTypeList  

ClassImplementsOpt ::= ClassImplements  
    |  #  

ClassInstanceCreationExpression ::= UnqualifiedClassInstanceCreationExpression  
    |  ExpressionName ART_CSP__PERIOD  UnqualifiedClassInstanceCreationExpression  
    |  Primary ART_CSP__PERIOD  UnqualifiedClassInstanceCreationExpression  

ClassLiteral ::= TypeName BracketsStar ART_CSP__PERIOD  ART_CSP_class   
    |  NumericType BracketsStar ART_CSP__PERIOD  ART_CSP_class   
    |  ART_CSP_boolean  BracketsStar ART_CSP__PERIOD  ART_CSP_class   
    |  ART_CSP_void  ART_CSP__PERIOD  ART_CSP_class   

ClassMemberDeclaration ::= FieldDeclaration  
    |  MethodDeclaration  
    |  ClassDeclaration  
    |  InterfaceDeclaration  
    |  ART_CSP__SEMICOLON   

ClassModifier ::= Annotation  
    |  ART_CSP_public   
    |  ART_CSP_protected   
    |  ART_CSP_private   
    |  ART_CSP_abstract   
    |  ART_CSP_static   
    |  ART_CSP_final   
    |  ART_CSP_sealed   
    |  ART_CSP_non_MINUSsealed   
    |  ART_CSP_strictfp   

ClassModifierStar ::= ClassModifier ClassModifierStar  
    |  #  

ClassOrInterfaceType ::= ClassType  
    |  InterfaceType  

ClassOrInterfaceTypeToInstantiate ::= AnnotationStar Identifier  DotAnnotationStarIdentifierStar TypeArgumentsOrDiamondOpt  

ClassPermits ::= ART_CSP_permits  TypeName CommaTypeNameStar  

ClassPermitsOpt ::= ClassPermits  
    |  #  

ClassType ::= AnnotationStar TypeIdentifier  TypeArgumentsOpt  
    |  PackageName ART_CSP__PERIOD  AnnotationStar TypeIdentifier  TypeArgumentsOpt  
    |  ClassOrInterfaceType ART_CSP__PERIOD  AnnotationStar TypeIdentifier  TypeArgumentsOpt  

CommaCaseConstantStar ::= ART_CSP__COMMA  CaseConstant CommaCaseConstantStar  
    |  #  

CommaElementValuePairStar ::= ART_CSP__COMMA  ElementValuePair CommaElementValuePairStar  
    |  #  

CommaElementValueStar ::= ART_CSP__COMMA  ElementValue CommaElementValueStar  
    |  #  

CommaEnumConstantStar ::= ART_CSP__COMMA  EnumConstant CommaEnumConstantStar  
    |  #  

CommaExceptionTypeStar ::= ART_CSP__COMMA  ExceptionType CommaExceptionTypeStar  
    |  #  

CommaExpressionStar ::= ART_CSP__COMMA  Expression CommaExpressionStar  
    |  #  

CommaFormalParameterStar ::= ART_CSP__COMMA  FormalParameter CommaFormalParameterStar  
    |  #  

CommaIdentifierStar ::= ART_CSP__COMMA  Identifier  CommaIdentifierStar  
    |  #  

CommaInterfaceTypeStar ::= ART_CSP__COMMA  InterfaceType CommaInterfaceTypeStar  
    |  #  

CommaLambdaParameterStar ::= ART_CSP__COMMA  LambdaParameter CommaLambdaParameterStar  
    |  #  

CommaModuleNameOpt ::= ART_CSP__COMMA  ModuleName  
    |  #  

CommaOpt ::= ART_CSP__COMMA   
    |  #  

CommaRecordComponentStar ::= ART_CSP__COMMA  RecordComponent CommaRecordComponentStar  
    |  #  

CommaStatementExpressionStar ::= ART_CSP__COMMA  StatementExpression CommaStatementExpressionStar  
    |  #  

CommaTypeArgumentStar ::= ART_CSP__COMMA  TypeArgument CommaTypeArgumentStar  
    |  #  

CommaTypeNameStar ::= ART_CSP__COMMA  TypeName CommaTypeNameStar  
    |  #  

CommaTypeParameterStar ::= ART_CSP__COMMA  TypeParameter CommaTypeParameterStar  
    |  #  

CommaVariableDeclaratorStar ::= ART_CSP__COMMA  VariableDeclarator CommaVariableDeclaratorStar  
    |  #  

CommaVariableInitializerStar ::= ART_CSP__COMMA  VariableInitializer CommaVariableInitializerStar  
    |  #  

CompactConstructorDeclaration ::= ConstructorModifierStar SimpleTypeName ConstructorBody  

CompilationUnit ::= OrdinaryCompilationUnit  
    |  ModularCompilationUnit  
    |  DummyRuleEAS  

ConditionalAndExpression ::= InclusiveOrExpression  
    |  ConditionalAndExpression ART_CSP__AMPERSAND_AMPERSAND  InclusiveOrExpression  

ConditionalExpression ::= ConditionalOrExpression  
    |  ConditionalOrExpression ART_CSP__QUERY  Expression ART_CSP__COLON  ConditionalExpression  
    |  ConditionalOrExpression ART_CSP__QUERY  Expression ART_CSP__COLON  LambdaExpression  

ConditionalOrExpression ::= ConditionalAndExpression  
    |  ConditionalOrExpression ART_CSP__BAR_BAR  ConditionalAndExpression  

ConstantDeclaration ::= ConstantModifierStar UnannType VariableDeclaratorList ART_CSP__SEMICOLON   

ConstantModifier ::= Annotation  
    |  ART_CSP_public   
    |  ART_CSP_static   
    |  ART_CSP_final   

ConstantModifierStar ::= ConstantModifier ConstantModifierStar  
    |  #  

ConstructorBody ::= ART_CSP__LBRACE  ExplicitConstructorInvocationOpt BlockStatementsOpt ART_CSP__RBRACE   

ConstructorDeclaration ::= ConstructorModifierStar ConstructorDeclarator ThrowsOpt ConstructorBody  

ConstructorDeclarator ::= TypeParametersOpt SimpleTypeName ART_CSP__LPAR  ReceiverParameterCommaOpt FormalParameterListOpt ART_CSP__RPAR   

ConstructorModifier ::= Annotation  
    |  ART_CSP_public   
    |  ART_CSP_protected   
    |  ART_CSP_private   

ConstructorModifierStar ::= ConstructorModifier ConstructorModifierStar  
    |  #  

ContinueStatement ::= ART_CSP_continue  IdentifierOpt ART_CSP__SEMICOLON   

DefaultValue ::= ART_CSP_default  ElementValue  

DefaultValueOpt ::= DefaultValue  
    |  #  

DimExpr ::= AnnotationStar ART_CSP__LBRACK  Expression ART_CSP__RBRACK   

DimExprStar ::= DimExpr DimExprStar  
    |  #  

DimExprs ::= DimExpr DimExprStar  

Dims ::= AnnotationStar ART_CSP__LBRACK  ART_CSP__RBRACK  AnnotationStarBracketStar  

DimsOpt ::= Dims  
    |  #  

DoStatement ::= ART_CSP_do  Statement ART_CSP_while  ART_CSP__LPAR  Expression ART_CSP__RPAR  ART_CSP__SEMICOLON   

DotAnnotationStarIdentifierStar ::= ART_CSP__PERIOD  AnnotationStar Identifier  DotAnnotationStarIdentifierStar  
    |  #  

DotIdentifierStar ::= ART_CSP__PERIOD  Identifier  DotIdentifierStar  
    |  #  

DummyRuleEAS ::= ART_CSP_goto   
    |  ART_CSP_const   

ElementValue ::= ConditionalExpression  
    |  ElementValueArrayInitializer  
    |  Annotation  

ElementValueArrayInitializer ::= ART_CSP__LBRACE  ElementValueListOpt CommaOpt ART_CSP__RBRACE   

ElementValueList ::= ElementValue CommaElementValueStar  

ElementValueListOpt ::= ElementValueList  
    |  #  

ElementValuePair ::= Identifier  ART_CSP__EQUAL  ElementValue  

ElementValuePairList ::= ElementValuePair CommaElementValuePairStar  

ElementValuePairListOpt ::= ElementValuePairList  
    |  #  

EmptyStatement ::= ART_CSP__SEMICOLON   

EnhancedForStatement ::= ART_CSP_for  ART_CSP__LPAR  LocalVariableDeclaration ART_CSP__COLON  Expression ART_CSP__RPAR  Statement  

EnhancedForStatementNoShortIf ::= ART_CSP_for  ART_CSP__LPAR  LocalVariableDeclaration ART_CSP__COLON  Expression ART_CSP__RPAR  StatementNoShortIf  

EnumBody ::= ART_CSP__LBRACE  EnumConstantListOpt CommaOpt EnumBodyDeclarationsOpt ART_CSP__RBRACE   

EnumBodyDeclarations ::= ART_CSP__SEMICOLON  ClassBodyDeclarationStar  

EnumBodyDeclarationsOpt ::= EnumBodyDeclarations  
    |  #  

EnumConstant ::= EnumConstantModifierStar Identifier  ParanArgumentListOptStar ClassBodyOpt  

EnumConstantList ::= EnumConstant CommaEnumConstantStar  

EnumConstantListOpt ::= EnumConstantList  
    |  #  

EnumConstantModifier ::= Annotation  

EnumConstantModifierStar ::= EnumConstantModifier EnumConstantModifierStar  
    |  #  

EnumDeclaration ::= ClassModifierStar ART_CSP_enum  TypeIdentifier  ClassImplementsOpt EnumBody  

EqualVariableInitializerOpt ::= ART_CSP__EQUAL  VariableInitializer  
    |  #  

EqualityExpression ::= RelationalExpression  
    |  EqualityExpression ART_CSP__EQUAL_EQUAL  RelationalExpression  
    |  EqualityExpression ART_CSP__SHREIK_EQUAL  RelationalExpression  

ExceptionType ::= ClassType  
    |  TypeVariable  

ExceptionTypeList ::= ExceptionType CommaExceptionTypeStar  

ExclusiveOrExpression ::= AndExpression  
    |  ExclusiveOrExpression ART_CSP__UPARROW  AndExpression  

ExplicitConstructorInvocation ::= TypeArgumentsOpt ART_CSP_this  ART_CSP__LPAR  ArgumentListOpt ART_CSP__RPAR  ART_CSP__SEMICOLON   
    |  TypeArgumentsOpt ART_CSP_super  ART_CSP__LPAR  ArgumentListOpt ART_CSP__RPAR  ART_CSP__SEMICOLON   
    |  ExpressionName ART_CSP__PERIOD  TypeArgumentsOpt ART_CSP_super  ART_CSP__LPAR  ArgumentListOpt ART_CSP__RPAR  ART_CSP__SEMICOLON   
    |  Primary ART_CSP__PERIOD  TypeArgumentsOpt ART_CSP_super  ART_CSP__LPAR  ArgumentListOpt ART_CSP__RPAR  ART_CSP__SEMICOLON   

ExplicitConstructorInvocationOpt ::= ExplicitConstructorInvocation  
    |  #  

Expression ::= LambdaExpression  
    |  AssignmentExpression  

ExpressionName ::= Identifier   
    |  AmbiguousName ART_CSP__PERIOD  Identifier   

ExpressionOpt ::= Expression  
    |  #  

ExpressionStatement ::= StatementExpression ART_CSP__SEMICOLON   

FieldAccess ::= Primary ART_CSP__PERIOD  Identifier   
    |  ART_CSP_super  ART_CSP__PERIOD  Identifier   
    |  TypeName ART_CSP__PERIOD  ART_CSP_super  ART_CSP__PERIOD  Identifier   

FieldDeclaration ::= FieldModifierStar UnannType VariableDeclaratorList ART_CSP__SEMICOLON   

FieldModifier ::= Annotation  
    |  ART_CSP_public   
    |  ART_CSP_protected   
    |  ART_CSP_private   
    |  ART_CSP_static   
    |  ART_CSP_final   
    |  ART_CSP_transient   
    |  ART_CSP_volatile   

FieldModifierStar ::= FieldModifier FieldModifierStar  
    |  #  

Finally ::= ART_CSP_finally  Block  

FinallyOpt ::= Finally  
    |  #  

FloatingPointType ::= ART_CSP_float   
    |  ART_CSP_double   

ForInit ::= StatementExpressionList  
    |  LocalVariableDeclaration  

ForInitOpt ::= ForInit  
    |  #  

ForStatement ::= BasicForStatement  
    |  EnhancedForStatement  

ForStatementNoShortIf ::= BasicForStatementNoShortIf  
    |  EnhancedForStatementNoShortIf  

ForUpdate ::= StatementExpressionList  

ForUpdateOpt ::= ForUpdate  
    |  #  

FormalParameter ::= VariableModifierStar UnannType VariableDeclaratorId  
    |  VariableArityParameter  

FormalParameterList ::= FormalParameter CommaFormalParameterStar  

FormalParameterListOpt ::= FormalParameterList  
    |  #  

IdentifierDotOpt ::= Identifier  ART_CSP__PERIOD   
    |  #  

IdentifierOpt ::= Identifier   
    |  #  

IfThenElseStatement ::= ART_CSP_if  ART_CSP__LPAR  Expression ART_CSP__RPAR  StatementNoShortIf ART_CSP_else  Statement  

IfThenElseStatementNoShortIf ::= ART_CSP_if  ART_CSP__LPAR  Expression ART_CSP__RPAR  StatementNoShortIf ART_CSP_else  StatementNoShortIf  

IfThenStatement ::= ART_CSP_if  ART_CSP__LPAR  Expression ART_CSP__RPAR  Statement  

ImportDeclaration ::= SingleTypeImportDeclaration  
    |  TypeImportOnDemandDeclaration  
    |  SingleStaticImportDeclaration  
    |  StaticImportOnDemandDeclaration  

ImportDeclarationStar ::= ImportDeclaration ImportDeclarationStar  
    |  #  

InclusiveOrExpression ::= ExclusiveOrExpression  
    |  InclusiveOrExpression ART_CSP__BAR  ExclusiveOrExpression  

InstanceInitializer ::= Block  

InstanceofExpression ::= RelationalExpression ART_CSP_instanceof  ReferenceType  
    |  RelationalExpression ART_CSP_instanceof  Pattern  

IntegralType ::= ART_CSP_byte   
    |  ART_CSP_short   
    |  ART_CSP_int   
    |  ART_CSP_long   
    |  ART_CSP_char   

InterfaceBody ::= ART_CSP__LBRACE  InterfaceMemberDeclarationStar ART_CSP__RBRACE   

InterfaceDeclaration ::= NormalInterfaceDeclaration  
    |  AnnotationInterfaceDeclaration  

InterfaceExtends ::= ART_CSP_extends  InterfaceTypeList  

InterfaceExtendsOpt ::= InterfaceExtends  
    |  #  

InterfaceMemberDeclaration ::= ConstantDeclaration  
    |  InterfaceMethodDeclaration  
    |  ClassDeclaration  
    |  InterfaceDeclaration  
    |  ART_CSP__SEMICOLON   

InterfaceMemberDeclarationStar ::= InterfaceMemberDeclaration InterfaceMemberDeclarationStar  
    |  #  

InterfaceMethodDeclaration ::= InterfaceMethodModifierStar MethodHeader MethodBody  

InterfaceMethodModifier ::= Annotation  
    |  ART_CSP_public   
    |  ART_CSP_private   
    |  ART_CSP_abstract   
    |  ART_CSP_default   
    |  ART_CSP_static   
    |  ART_CSP_strictfp   

InterfaceMethodModifierStar ::= InterfaceMethodModifier InterfaceMethodModifierStar  
    |  #  

InterfaceModifier ::= Annotation  
    |  ART_CSP_public   
    |  ART_CSP_protected   
    |  ART_CSP_private   
    |  ART_CSP_abstract   
    |  ART_CSP_static   
    |  ART_CSP_sealed   
    |  ART_CSP_non_MINUSsealed   
    |  ART_CSP_strictfp   

InterfaceModifierStar ::= InterfaceModifier InterfaceModifierStar  
    |  #  

InterfacePermits ::= ART_CSP_permits  TypeName CommaTypeNameStar  

InterfacePermitsOpt ::= InterfacePermits  
    |  #  

InterfaceType ::= ClassType  

InterfaceTypeList ::= InterfaceType CommaInterfaceTypeStar  

LabeledStatement ::= Identifier  ART_CSP__COLON  Statement  

LabeledStatementNoShortIf ::= Identifier  ART_CSP__COLON  StatementNoShortIf  

LambdaBody ::= Expression  
    |  Block  

LambdaExpression ::= LambdaParameters ART_CSP__MINUS_GT  LambdaBody  

LambdaParameter ::= VariableModifierStar LambdaParameterType VariableDeclaratorId  
    |  VariableArityParameter  

LambdaParameterList ::= LambdaParameter CommaLambdaParameterStar  
    |  Identifier  CommaIdentifierStar  

LambdaParameterListOpt ::= LambdaParameterList  
    |  #  

LambdaParameterType ::= UnannType  
    |  ART_CSP_var   

LambdaParameters ::= ART_CSP__LPAR  LambdaParameterListOpt ART_CSP__RPAR   
    |  Identifier   

LeftHandSide ::= ExpressionName  
    |  FieldAccess  
    |  ArrayAccess  

Literal ::= IntegerLiteral   
    |  FloatingPointLiteral   
    |  BooleanLiteral   
    |  CharacterLiteral   
    |  StringLiteral   
    |  TextBlock   
    |  NullLiteral   

LocalClassOrInterfaceDeclaration ::= ClassDeclaration  
    |  NormalInterfaceDeclaration  

LocalVariableDeclaration ::= VariableModifierStar LocalVariableType VariableDeclaratorList  

LocalVariableDeclarationStatement ::= LocalVariableDeclaration ART_CSP__SEMICOLON   

LocalVariableType ::= UnannType  
    |  ART_CSP_var   

MarkerAnnotation ::= ART_CSP__AT  TypeName  

MethodBody ::= Block  
    |  ART_CSP__SEMICOLON   

MethodDeclaration ::= MethodModifierStar MethodHeader MethodBody  

MethodDeclarator ::= Identifier  ART_CSP__LPAR  ReceiverParameterCommaOpt FormalParameterListOpt ART_CSP__RPAR  DimsOpt  

MethodHeader ::= Result MethodDeclarator ThrowsOpt  
    |  TypeParameters AnnotationStar Result MethodDeclarator ThrowsOpt  

MethodInvocation ::= MethodName ART_CSP__LPAR  ArgumentListOpt ART_CSP__RPAR   
    |  TypeName ART_CSP__PERIOD  TypeArgumentsOpt Identifier  ART_CSP__LPAR  ArgumentListOpt ART_CSP__RPAR   
    |  ExpressionName ART_CSP__PERIOD  TypeArgumentsOpt Identifier  ART_CSP__LPAR  ArgumentListOpt ART_CSP__RPAR   
    |  Primary ART_CSP__PERIOD  TypeArgumentsOpt Identifier  ART_CSP__LPAR  ArgumentListOpt ART_CSP__RPAR   
    |  ART_CSP_super  ART_CSP__PERIOD  TypeArgumentsOpt Identifier  ART_CSP__LPAR  ArgumentListOpt ART_CSP__RPAR   
    |  TypeName ART_CSP__PERIOD  ART_CSP_super  ART_CSP__PERIOD  TypeArgumentsOpt Identifier  ART_CSP__LPAR  ArgumentListOpt ART_CSP__RPAR   

MethodModifier ::= Annotation  
    |  ART_CSP_public   
    |  ART_CSP_protected   
    |  ART_CSP_private   
    |  ART_CSP_abstract   
    |  ART_CSP_static   
    |  ART_CSP_final   
    |  ART_CSP_synchronized   
    |  ART_CSP_native   
    |  ART_CSP_strictfp   

MethodModifierStar ::= MethodModifier MethodModifierStar  
    |  #  

MethodName ::= UnqualifiedMethodIdentifier   

MethodReference ::= ExpressionName ART_CSP__COLON_COLON  TypeArgumentsOpt Identifier   
    |  Primary ART_CSP__COLON_COLON  TypeArgumentsOpt Identifier   
    |  ReferenceType ART_CSP__COLON_COLON  TypeArgumentsOpt Identifier   
    |  ART_CSP_super  ART_CSP__COLON_COLON  TypeArgumentsOpt Identifier   
    |  TypeName ART_CSP__PERIOD  ART_CSP_super  ART_CSP__COLON_COLON  TypeArgumentsOpt Identifier   
    |  ClassType ART_CSP__COLON_COLON  TypeArgumentsOpt ART_CSP_new   
    |  ArrayType ART_CSP__COLON_COLON  ART_CSP_new   

ModularCompilationUnit ::= ImportDeclarationStar ModuleDeclaration  

ModuleDeclaration ::= AnnotationStar openOpt ART_CSP_module  Identifier  DotIdentifierStar ART_CSP__LBRACE  ModuleDirectiveStar ART_CSP__RBRACE   

ModuleDirective ::= ART_CSP_requires  RequiresModifierStar ModuleName ART_CSP__SEMICOLON   
    |  ART_CSP_exports  PackageName ToModuleNameCommaModuleNameOptStar ART_CSP__SEMICOLON   
    |  ART_CSP_opens  PackageName ToModuleNameCommaModuleNameOptStar ART_CSP__SEMICOLON   
    |  ART_CSP_uses  TypeName ART_CSP__SEMICOLON   
    |  ART_CSP_provides  TypeName ART_CSP_with  TypeName CommaTypeNameStar ART_CSP__SEMICOLON   

ModuleDirectiveStar ::= ModuleDirective ModuleDirectiveStar  
    |  #  

ModuleName ::= Identifier   
    |  ModuleName ART_CSP__PERIOD  Identifier   

MultiplicativeExpression ::= UnaryExpression  
    |  MultiplicativeExpression ART_CSP__STAR  UnaryExpression  
    |  MultiplicativeExpression ART_CSP__SLASH  UnaryExpression  
    |  MultiplicativeExpression ART_CSP__PERCENT  UnaryExpression  

NormalAnnotation ::= ART_CSP__AT  TypeName ART_CSP__LPAR  ElementValuePairListOpt ART_CSP__RPAR   

NormalClassDeclaration ::= ClassModifierStar ART_CSP_class  TypeIdentifier  TypeParametersOpt ClassExtendsOpt ClassImplementsOpt ClassPermitsOpt ClassBody  

NormalInterfaceDeclaration ::= InterfaceModifierStar ART_CSP_interface  TypeIdentifier  TypeParametersOpt InterfaceExtendsOpt InterfacePermitsOpt InterfaceBody  

NumericType ::= IntegralType  
    |  FloatingPointType  

OrdinaryCompilationUnit ::= PackageDeclarationOpt ImportDeclarationStar TopLevelClassOrInterfaceDeclarationStar  

PackageDeclaration ::= PackageModifierStar ART_CSP_package  Identifier  DotIdentifierStar ART_CSP__SEMICOLON   

PackageDeclarationOpt ::= PackageDeclaration  
    |  #  

PackageModifier ::= Annotation  

PackageModifierStar ::= PackageModifier PackageModifierStar  
    |  #  

PackageName ::= Identifier   
    |  PackageName ART_CSP__PERIOD  Identifier   

PackageOrTypeName ::= Identifier   
    |  PackageOrTypeName ART_CSP__PERIOD  Identifier   

ParanArgumentListOptStar ::= ART_CSP__LPAR  ArgumentListOpt ART_CSP__RPAR  ParanArgumentListOptStar  
    |  #  

Pattern ::= TypePattern  

PostDecrementExpression ::= PostfixExpression ART_CSP__MINUS_MINUS   

PostIncrementExpression ::= PostfixExpression ART_CSP__PLUS_PLUS   

PostfixExpression ::= Primary  
    |  ExpressionName  
    |  PostIncrementExpression  
    |  PostDecrementExpression  

PreDecrementExpression ::= ART_CSP__MINUS_MINUS  UnaryExpression  

PreIncrementExpression ::= ART_CSP__PLUS_PLUS  UnaryExpression  

Primary ::= PrimaryNoNewArray  
    |  ArrayCreationExpression  

PrimaryNoNewArray ::= Literal  
    |  ClassLiteral  
    |  ART_CSP_this   
    |  TypeName ART_CSP__PERIOD  ART_CSP_this   
    |  ART_CSP__LPAR  Expression ART_CSP__RPAR   
    |  ClassInstanceCreationExpression  
    |  FieldAccess  
    |  ArrayAccess  
    |  MethodInvocation  
    |  MethodReference  

PrimitiveType ::= AnnotationStar NumericType  
    |  AnnotationStar ART_CSP_boolean   

ReceiverParameter ::= AnnotationStar UnannType IdentifierDotOpt ART_CSP_this   

ReceiverParameterCommaOpt ::= ReceiverParameter ART_CSP__COMMA   
    |  #  

RecordBody ::= ART_CSP__LBRACE  RecordBodyDeclarationStar ART_CSP__RBRACE   

RecordBodyDeclaration ::= ClassBodyDeclaration  
    |  CompactConstructorDeclaration  

RecordBodyDeclarationStar ::= RecordBodyDeclaration RecordBodyDeclarationStar  
    |  #  

RecordComponent ::= RecordComponentModifierStar UnannType Identifier   
    |  VariableArityRecordComponent  

RecordComponentList ::= RecordComponent CommaRecordComponentStar  

RecordComponentListOpt ::= RecordComponentList  
    |  #  

RecordComponentModifier ::= Annotation  

RecordComponentModifierStar ::= RecordComponentModifier RecordComponentModifierStar  
    |  #  

RecordDeclaration ::= ClassModifierStar ART_CSP_record  TypeIdentifier  TypeParametersOpt RecordHeader ClassImplementsOpt RecordBody  

RecordHeader ::= ART_CSP__LPAR  RecordComponentListOpt ART_CSP__RPAR   

ReferenceType ::= ClassOrInterfaceType  
    |  TypeVariable  
    |  ArrayType  

RelationalExpression ::= ShiftExpression  
    |  RelationalExpression ART_CSP__LT  ShiftExpression  
    |  RelationalExpression ART_CSP__GT  ShiftExpression  
    |  RelationalExpression ART_CSP__LT_EQUAL  ShiftExpression  
    |  RelationalExpression ART_CSP__GT_EQUAL  ShiftExpression  
    |  InstanceofExpression  

RequiresModifier ::= ART_CSP_transitive   
    |  ART_CSP_static   

RequiresModifierStar ::= RequiresModifier RequiresModifierStar  
    |  #  

Resource ::= LocalVariableDeclaration  
    |  ART_CSP_VariableAccess   

ResourceList ::= Resource SemicolonResourceStar  

ResourceSpecification ::= ART_CSP__LPAR  ResourceList SemicolonOpt ART_CSP__RPAR   

Result ::= UnannType  
    |  ART_CSP_void   

ReturnStatement ::= ART_CSP_return  ExpressionOpt ART_CSP__SEMICOLON   

SemicolonOpt ::= ART_CSP__SEMICOLON   
    |  #  

SemicolonResourceStar ::= ART_CSP__SEMICOLON  Resource SemicolonResourceStar  
    |  #  

ShiftExpression ::= AdditiveExpression  
    |  ShiftExpression ART_CSP__LT_LT  AdditiveExpression  
    |  ShiftExpression ART_CSP__GT_GT  AdditiveExpression  
    |  ShiftExpression ART_CSP__GT_GT_GT  AdditiveExpression  

SimpleTypeName ::= TypeIdentifier   

SingleElementAnnotation ::= ART_CSP__AT  TypeName ART_CSP__LPAR  ElementValue ART_CSP__RPAR   

SingleStaticImportDeclaration ::= ART_CSP_import  ART_CSP_static  TypeName ART_CSP__PERIOD  Identifier  ART_CSP__SEMICOLON   

SingleTypeImportDeclaration ::= ART_CSP_import  TypeName ART_CSP__SEMICOLON   

Statement ::= StatementWithoutTrailingSubstatement  
    |  LabeledStatement  
    |  IfThenStatement  
    |  IfThenElseStatement  
    |  WhileStatement  
    |  ForStatement  

StatementExpression ::= Assignment  
    |  PreIncrementExpression  
    |  PreDecrementExpression  
    |  PostIncrementExpression  
    |  PostDecrementExpression  
    |  MethodInvocation  
    |  ClassInstanceCreationExpression  

StatementExpressionList ::= StatementExpression CommaStatementExpressionStar  

StatementNoShortIf ::= StatementWithoutTrailingSubstatement  
    |  LabeledStatementNoShortIf  
    |  IfThenElseStatementNoShortIf  
    |  WhileStatementNoShortIf  
    |  ForStatementNoShortIf  

StatementWithoutTrailingSubstatement ::= Block  
    |  EmptyStatement  
    |  ExpressionStatement  
    |  AssertStatement  
    |  SwitchStatement  
    |  DoStatement  
    |  BreakStatement  
    |  ContinueStatement  
    |  ReturnStatement  
    |  SynchronizedStatement  
    |  ThrowStatement  
    |  TryStatement  
    |  YieldStatement  

StaticImportOnDemandDeclaration ::= ART_CSP_import  ART_CSP_static  TypeName ART_CSP__PERIOD  ART_CSP__STAR  ART_CSP__SEMICOLON   

StaticInitializer ::= ART_CSP_static  Block  

SwitchBlock ::= ART_CSP__LBRACE  SwitchRule SwitchRuleStar ART_CSP__RBRACE   
    |  ART_CSP__LBRACE  SwitchBlockStatementGroupStar SwitchLabelColonStar ART_CSP__RBRACE   

SwitchBlockStatementGroup ::= SwitchLabel ART_CSP__COLON  SwitchLabelColonStar BlockStatements  

SwitchBlockStatementGroupStar ::= SwitchBlockStatementGroup SwitchBlockStatementGroupStar  
    |  #  

SwitchExpression ::= ART_CSP_switch  ART_CSP__LPAR  Expression ART_CSP__RPAR  SwitchBlock  

SwitchLabel ::= ART_CSP_case  CaseConstant CommaCaseConstantStar  
    |  ART_CSP_default   

SwitchLabelColonStar ::= SwitchLabel ART_CSP__COLON  SwitchLabelColonStar  
    |  #  

SwitchRule ::= SwitchLabel ART_CSP__MINUS_GT  Expression ART_CSP__SEMICOLON   
    |  SwitchLabel ART_CSP__MINUS_GT  Block  
    |  SwitchLabel ART_CSP__MINUS_GT  ThrowStatement  

SwitchRuleStar ::= SwitchRule SwitchRuleStar  
    |  #  

SwitchStatement ::= ART_CSP_switch  ART_CSP__LPAR  Expression ART_CSP__RPAR  SwitchBlock  

SynchronizedStatement ::= ART_CSP_synchronized  ART_CSP__LPAR  Expression ART_CSP__RPAR  Block  

ThrowStatement ::= ART_CSP_throw  Expression ART_CSP__SEMICOLON   

Throws ::= ART_CSP_throws  ExceptionTypeList  

ThrowsOpt ::= Throws  
    |  #  

ToModuleNameCommaModuleNameOptStar ::= ART_CSP_to  ModuleName CommaModuleNameOpt ToModuleNameCommaModuleNameOptStar  
    |  #  

TopLevelClassOrInterfaceDeclaration ::= ClassDeclaration  
    |  InterfaceDeclaration  
    |  ART_CSP__SEMICOLON   

TopLevelClassOrInterfaceDeclarationStar ::= TopLevelClassOrInterfaceDeclaration TopLevelClassOrInterfaceDeclarationStar  
    |  #  

TryStatement ::= ART_CSP_try  Block Catches  
    |  ART_CSP_try  Block CatchesOpt Finally  
    |  TryWithResourcesStatement  

TryWithResourcesStatement ::= ART_CSP_try  ResourceSpecification Block CatchesOpt FinallyOpt  

TypeArgument ::= ReferenceType  
    |  Wildcard  

TypeArgumentList ::= TypeArgument CommaTypeArgumentStar  

TypeArguments ::= ART_CSP__LT  TypeArgumentList ART_CSP__GT   

TypeArgumentsOpt ::= TypeArguments  
    |  #  

TypeArgumentsOrDiamond ::= TypeArguments  
    |  ART_CSP__LT_GT   

TypeArgumentsOrDiamondOpt ::= TypeArgumentsOrDiamond  
    |  #  

TypeBound ::= ART_CSP_extends  TypeVariable  
    |  ART_CSP_extends  ClassOrInterfaceType AdditionalBoundStar  

TypeBoundOpt ::= TypeBound  
    |  #  

TypeImportOnDemandDeclaration ::= ART_CSP_import  PackageOrTypeName ART_CSP__PERIOD  ART_CSP__STAR  ART_CSP__SEMICOLON   

TypeName ::= TypeIdentifier   
    |  PackageOrTypeName ART_CSP__PERIOD  TypeIdentifier   

TypeParameter ::= TypeParameterModifierStar TypeIdentifier  TypeBoundOpt  

TypeParameterList ::= TypeParameter CommaTypeParameterStar  

TypeParameterModifier ::= Annotation  

TypeParameterModifierStar ::= TypeParameterModifier TypeParameterModifierStar  
    |  #  

TypeParameters ::= ART_CSP__LT  TypeParameterList ART_CSP__GT   

TypeParametersOpt ::= TypeParameters  
    |  #  

TypePattern ::= LocalVariableDeclaration  

TypeVariable ::= AnnotationStar TypeIdentifier   

UnannArrayType ::= UnannPrimitiveType Dims  
    |  UnannClassOrInterfaceType Dims  
    |  UnannTypeVariable Dims  

UnannClassOrInterfaceType ::= UnannClassType  
    |  UnannInterfaceType  

UnannClassType ::= TypeIdentifier  TypeArgumentsOpt  
    |  PackageName ART_CSP__PERIOD  AnnotationStar TypeIdentifier  TypeArgumentsOpt  
    |  UnannClassOrInterfaceType ART_CSP__PERIOD  AnnotationStar TypeIdentifier  TypeArgumentsOpt  

UnannInterfaceType ::= UnannClassType  

UnannPrimitiveType ::= NumericType  
    |  ART_CSP_boolean   

UnannReferenceType ::= UnannClassOrInterfaceType  
    |  UnannTypeVariable  
    |  UnannArrayType  

UnannType ::= UnannPrimitiveType  
    |  UnannReferenceType  

UnannTypeVariable ::= TypeIdentifier   

UnaryExpression ::= PreIncrementExpression  
    |  PreDecrementExpression  
    |  ART_CSP__PLUS  UnaryExpression  
    |  ART_CSP__MINUS  UnaryExpression  
    |  UnaryExpressionNotPlusMinus  

UnaryExpressionNotPlusMinus ::= PostfixExpression  
    |  ART_CSP__TILDE  UnaryExpression  
    |  ART_CSP__SHREIK  UnaryExpression  
    |  CastExpression  
    |  SwitchExpression  

UnqualifiedClassInstanceCreationExpression ::= ART_CSP_new  TypeArgumentsOpt ClassOrInterfaceTypeToInstantiate ART_CSP__LPAR  ArgumentListOpt ART_CSP__RPAR  ClassBodyOpt  

VariableArityParameter ::= VariableModifierStar UnannType AnnotationStar ART_CSP__PERIOD_PERIOD_PERIOD  Identifier   

VariableArityRecordComponent ::= RecordComponentModifierStar UnannType AnnotationStar ART_CSP__PERIOD_PERIOD_PERIOD  Identifier   

VariableDeclarator ::= VariableDeclaratorId EqualVariableInitializerOpt  

VariableDeclaratorId ::= Identifier  DimsOpt  

VariableDeclaratorList ::= VariableDeclarator CommaVariableDeclaratorStar  

VariableInitializer ::= Expression  
    |  ArrayInitializer  

VariableInitializerList ::= VariableInitializer CommaVariableInitializerStar  

VariableInitializerListOpt ::= VariableInitializerList  
    |  #  

VariableModifier ::= Annotation  
    |  ART_CSP_final   

VariableModifierStar ::= VariableModifier VariableModifierStar  
    |  #  

WhileStatement ::= ART_CSP_while  ART_CSP__LPAR  Expression ART_CSP__RPAR  Statement  

WhileStatementNoShortIf ::= ART_CSP_while  ART_CSP__LPAR  Expression ART_CSP__RPAR  StatementNoShortIf  

Wildcard ::= AnnotationStar ART_CSP__QUERY  WildcardBoundsOpt  

WildcardBounds ::= ART_CSP_extends  ReferenceType  
    |  ART_CSP_super  ReferenceType  

WildcardBoundsOpt ::= WildcardBounds  
    |  #  

YieldStatement ::= ART_CSP_yield  Expression ART_CSP__SEMICOLON   

openOpt ::= ART_CSP_open   
    | #  
